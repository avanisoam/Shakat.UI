@page "/Test2"
@using System.ComponentModel.DataAnnotations



<div>
    <EditForm Model="@_model" OnValidSubmit="@HandleValidSubmit">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <p>
            <InputRadioGroup @bind-Value="_model.Manufacturer">
                Manufacturer:
                <br>
                @*foreach(int i in Enum.GetValues(typeof(Manufacturers)))
                {

                }*@

                @foreach (var manufacturer in (Manufacturers[])Enum.GetValues(typeof(Manufacturers)))
                {
                    <InputRadio Value="@manufacturer" />
                    <text>&nbsp;</text>@manufacturer<br>
                }
            </InputRadioGroup>
        </p>

       <InputRadioGroup @bind-Value="_model.Rating"> 
            
           @*<div>
                <InputRadio id="1radio" Value="1" checked="checked" />
                <label for="1radio">1</label>
            </div>

            <div>
                <InputRadio id="2radio" Value="2" />
                <label for="2radio">2</label>
            </div>*@

            @for (int i = 1; i <= 5; i++)
            {
                var str = @i + "radio"; 
                 <div>
                    <InputRadio id="@str" Value="@i" />
                    <label for="str">@i</label>
                </div>
            }

        </InputRadioGroup>

         <button type="submit">Submit</button>

    </EditForm> 
</div>


@code {

    public enum Manufacturers { SpaceX, NASA, ULA, VirginGalactic, Unknown }


    private TestModel _model = new() { Rating = 1 };

    public class TestModel
    {
        [Range(1, 5)]
        public int Rating { get; set; }
        
        [Required]
        [Range(typeof(Manufacturers), nameof(Manufacturers.SpaceX),
        nameof(Manufacturers.VirginGalactic), ErrorMessage = "Pick a manufacturer.")]
        public Manufacturers Manufacturer { get; set; } = Manufacturers.Unknown;
    }

    private void HandleValidSubmit()
    {
        //...
    }
}