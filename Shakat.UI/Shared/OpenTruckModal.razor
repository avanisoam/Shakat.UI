@page "/poc"
@using System.ComponentModel.DataAnnotations
@using Shakat.Shared.Models;
@using Shakat.UI.Services.Contracts;

@*<div class="modal" id="opentruckModal" role="dialog" data-backdrop="static" data-keyboard="false">
	<div class="modal-dialog">*@

		<!-- Modal content-->
		@*<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title text-center">Open Truck</h4>
			</div>*@

<EditForm Model="@newVehicleSubTypeInfoDtoObject" OnValidSubmit="@HandleValidSubmit">

				<DataAnnotationsValidator />
				<ValidationSummary />

				<div class="modal-body">
					<div class="sub-type-radio-collection row">
						@foreach (var openTruck in VehicleSubTypeInfos)
						{
						<div class="col-sm-3 col-xs-6">
					<input class="truck-subtype-radio" name="vehicletype" type="radio" id="openTruck_1" value="@openTruck.VehicleSubTypeInfoId">
					<label class="truck-subtype-label" onclick="setTruck('@openTruck.SubType')" for="openTruck_1">@openTruck.SubType</label>
						</div>
						}
						@*<div class="col-sm-3 col-xs-6">
							<input class="truck-subtype-radio" name="vehicletype" type="radio" id="openTruck_1" value= "1">
							<label class="truck-subtype-label" onclick="setTruck('Open Truck 14 Feet 3.5 Tons')" for="openTruck_1">14 Feet 3.5 Tons</label>
						</div>
						<div class="col-sm-3 col-xs-6">
							<input class="truck-subtype-radio" name="vehicletype" type="radio" id="openTruck_3" value="3">
							<label class="truck-subtype-label" onclick="setTruck('Open Truck 19 Feet 7.5 Tons')" for="openTruck_3">19 Feet 7.5 Tons</label>
						</div>
						<div class="col-sm-3 col-xs-6">
							<input class="truck-subtype-radio" name="vehicletype" type="radio" id="openTruck_4" value="4">
							<label class="truck-subtype-label" onclick="setTruck('Open Truck 20 Feet 10 Tons')" for="openTruck_4">20 Feet 10 Tons</label>
						</div>
						<div class="col-sm-3 col-xs-6">
							<input class="truck-subtype-radio" name="vehicletype" type="radio" id="openTruck_5" value="5">
							<label class="truck-subtype-label" onclick="setTruck('Open Truck 10 Wheel 19 Tons')" for="openTruck_5">10 Wheel 19 Tons</label>
						</div>
						<div class="col-sm-3 col-xs-6">
							<input class="truck-subtype-radio" name="vehicletype" type="radio" id="openTruck_6" value="6">
							<label class="truck-subtype-label" onclick="setTruck('Open Truck 12 Wheel 25 Tons')" for="openTruck_6">12 Wheel 25 Tons</label>
						</div>
						<div class="col-sm-3 col-xs-6">
							<input class="truck-subtype-radio" name="vehicletype" type="radio" id="openTruck_7" value="7">
							<label class="truck-subtype-label" onclick="setTruck('Open Truck 14 Wheel 30 Tons')" for="openTruck_7">14 Wheel 30 Tons</label>
						</div>*@

						@* <p>
				<InputRadioGroup @bind-Value="newVehicleSubTypeInfoDtoObject.VehicleSubTypeInfoId">

					@foreach (var openTruck in VehicleSubTypeInfos)
								{
						<div class="col-sm-3 col-xs-6">
							<InputRadio class="truck-subtype-radio" Value="@openTruck.VehicleSubTypeInfoId" />@openTruck.SubType
							<label class="truck-subtype-label" onclick="setTruck('@openTruck.SubType')" for="openTruck_7"><text>&nbsp;</text>@openTruck.SubType</label>
									</div>																
								}

							</InputRadioGroup>
						</p>*@

					</div>
				</div>

				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Ok</button>
				</div>

				<button type="submit">Submit</button>

			</EditForm> 

		@*</div>

@*	</div>
</div>*@

@code {

	[Inject]

	public IVehicleSubTypeInfoService VehicleSubTypeService { get; set; }

	public IEnumerable<VehicleSubTypeInfoDto> VehicleSubTypeInfos { get; set; } = new List<VehicleSubTypeInfoDto>();

	public VehicleSubTypeInfoDto newVehicleSubTypeInfoDtoObject { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		VehicleSubTypeInfos = await VehicleSubTypeService.GetByVehicleTypeId(2);
	}

    public enum OpenTrucks { SpaceX, NASA, ULA, VirginGalactic, Unknown }

    private TestModel _model = new() { OpenTruck = OpenTrucks.Unknown };

    public class TestModel
    {       
        [Required]
        [Range(typeof(OpenTrucks), nameof(OpenTrucks.SpaceX),
        nameof(OpenTrucks.VirginGalactic), ErrorMessage = "Pick a manufacturer.")]
        public OpenTrucks OpenTruck { get; set; } = OpenTrucks.Unknown;
    }

    private void HandleValidSubmit()
    {
        //...
    }
}